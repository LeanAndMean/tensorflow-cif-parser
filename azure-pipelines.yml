# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- azure-pipelines

pool:
  vmImage: 'Ubuntu-16.04'
strategy:
  matrix:
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: 'x64'
  displayName: 'Use Python $(python.version)'

- bash: echo "##vso[task.prependpath]$CONDA/bin"
  displayName: 'Add conda to PATH'

- script: |
    conda update conda --yes --quiet
  displayName: 'Update Conda'

- script: |
    conda init
  displayName: 'Initialize Conda'

- script: |
    conda create --yes --quiet --name tensorflow-cif-parser python=$PYTHON_VERSION
    conda activate tensorflow-cif-parser
    python -m pip install --upgrade pip
    python -m pip install .
  displayName: 'Install dependencies'

- script: |
    conda activate tensorflow-cif-parser
    python setup.py test --addopts '--junitxml=unittestresults.xml'
  displayName: 'Run unit tests'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'unittestresults.xml'
    testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
